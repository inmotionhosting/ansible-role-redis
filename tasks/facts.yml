---

- name: (Debian) Include os_family vars
  ansible.builtin.include_vars: Debian.yml
  when: ansible_os_family == "Debian"

- name: Set lists of required variables
  ansible.builtin.set_fact:
    redis_required_strings:
      - redis_conf
      - redis_daemon
      - redis_conf_bind
      - redis_conf_daemonize
      - redis_conf_supervised
      - redis_conf_pidfile
      - redis_conf_logfile
      - redis_conf_maxmemory
      - redis_conf_maxmemory_policy
      - redis_package
    redis_required_ints:
      - redis_conf_timeout

- name: Check required Redis variables (strings)
  ansible.builtin.fail:
    msg: |
      Invalid value for variable for '{{ item }}': {{ lookup('vars', item) }}

      Supported types  : String
      Supported values : Any non-null string
  when: >-
    lookup('vars', item) is not string
    or lookup('vars', item) == 0
  with_items: "{{ redis_required_strings }}"

- name: Check required Redis variables (integers)
  ansible.builtin.fail:
    msg: |
      Invalid value for variable for '{{ item }}': {{ lookup('vars', item) }}

      Supported types  : Integer
      Supported values : A number between 0-65535
  when: >-
    lookup('vars', item)|int < 0
    or lookup('vars', item)|int > 65535
  with_items: "{{ redis_required_ints }}"

- name: Check variable 'systemd_restart_setting'
  ansible.builtin.fail:
    msg: |
      Invalid value for variable 'systemd_restart_setting': '{{ systemd_restart_setting }}'

      Supported types  : String
      Supported values : "no", "on-success", "on-failure", "on-abnormal",
                         "on-watchdog", "on-abort", "always"
  failed_when: >-
    systemd_restart_setting not in
    ['no', 'on-success', 'on-failure', 'on-abnormal',
    'on-watchdog', 'on-abort', 'always']
    or systemd_restart_setting is not string
    or systemd_restart_setting == 0
  when: >-
    (redis_systemd_restart is defined
    and redis_systemd_restart)
    or (systemd_restart is defined
    and systemd_restart)
